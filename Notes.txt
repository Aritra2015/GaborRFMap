% Changes made (April 1, 2013)      Supratim Ray

1. At present having different contrast values for mapping/task gabor is leadng to computer errors. It appears that the GRFContrastKey is not getting set properly: if the lablib.knot.plist is removed and this code is run, it does not register "GRF0/1/2GaborContrast" although the other variables are set. The number of computer errors decrease (but does not become zero) if the we stop storing and restoring Gabors in the presentStimSequence method of GRFStimuli.
2. In the instruction trials, mapping stimuli are now set to null.
3. shuffleStimList is now modified to shuffle the stimList.
4. Removed some unused keys.


% Desired changes (22/03/13) Supratim Ray


1. Include option to convert a gabor to a grating.
2. Put digital codes for each stimulus so that the entire mapping sequence (one side) can be reconstructed from the data stream directly. Digital codes can be presented for only one mapping stimulus.
3. If percentage of catch stimuli is set to 100% and the actual task Gabor contrast is set at 0%, this essentially becomes a fixation task. Allow an option to run the program in this mode (need to count the catch stimuli in the done list).

4. Include option to change the temporal frequency of the mapping stimuli (7th parameter).
5. At present doneList in GRFMapStimTable is maintained as a 6-D array with kMaxMapValues = 8 entires per dimension, which needs 8^6 bytes. If fewer number of entries are used per parameter (say numAzi=1), we are unnecessarily dealing with a large and sparse matrix. Instead, this list should be constructed dynamically (7-D array of size numAzi*numEle*numSigma*numSF*numOri*numCon*numTF). This will allow us to increase the number of possible entries (kMaxMapValues) as long as all the parameters are not large simultaneously.
6. Check whether both digital codes and reward/eyedata etc can be controlled using a single ITC.


% Bugs          (22/03/13)  Supratim Ray

The code gives computer errors if contrast is different from 100%.